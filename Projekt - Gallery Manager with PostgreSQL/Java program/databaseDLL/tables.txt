-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.categories
(
    category_id integer NOT NULL,
    parent_category_id integer NOT NULL,
    category_name character varying(25) COLLATE pg_catalog."default",
    user_id integer,
    CONSTRAINT categories_pkey PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS public.photo_category
(
    photo_id integer NOT NULL,
    category_id integer NOT NULL,
    CONSTRAINT photo_category_category_id_key UNIQUE (category_id),
    CONSTRAINT photo_category_photo_id_key UNIQUE (photo_id),
    CONSTRAINT unique_names UNIQUE (photo_id, category_id)
);

CREATE TABLE IF NOT EXISTS public.photos
(
    photo_id integer NOT NULL,
    photo_size integer,
    photo_resolution_x integer,
    photo_resolution_y integer,
    photo_date date,
    photo_extension_format character varying(5) COLLATE pg_catalog."default",
    photo_name character varying(25) COLLATE pg_catalog."default",
    photo_description character varying(350) COLLATE pg_catalog."default",
    category_id integer,
    user_id integer,
    CONSTRAINT photos_pkey PRIMARY KEY (photo_id),
    CONSTRAINT photos_photo_id_key UNIQUE (photo_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    user_id integer NOT NULL,
    user_nickname character varying(25) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (user_id)
);

ALTER TABLE IF EXISTS public.categories
    ADD CONSTRAINT categories_parent_category_id_fkey FOREIGN KEY (parent_category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.categories
    ADD CONSTRAINT categories_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.photo_category
    ADD CONSTRAINT category_category FOREIGN KEY (category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS photo_category_category_id_key
    ON public.photo_category(category_id);


ALTER TABLE IF EXISTS public.photo_category
    ADD CONSTRAINT photo_photo FOREIGN KEY (photo_id)
    REFERENCES public.photos (photo_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS photo_category_photo_id_key
    ON public.photo_category(photo_id);

END;